security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login_check
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login_check
                username_path:            email
                password_path:            password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh:
            pattern: ^/api/token/refresh
            stateless: true
            refresh_jwt: ~
        api:
            pattern:   ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        main:
            lazy: true
            provider: app_user_provider

    access_control:

        - { path: ^/api/message/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/message/send, roles: PUBLIC_ACCESS }
        - { path: ^/api/message/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/event/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/event/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/event/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/event/\d+/delete, roles: PUBLIC_ACCESS }

        - { path: ^/api/kids/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/kids/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/kids/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/kids/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/coach/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/coach/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/coach/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/coach/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/challenge/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/challenge/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/challenge/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/challenge/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/publication/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/publication/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/publication/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/publication/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/user/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/\d+/delete, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/\d+/add-friend/\d+, roles: PUBLIC_ACCESS }

        - { path: ^/api/cours/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/cours/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/cours/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/cours/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/category/list, roles: PUBLIC_ACCESS }
        - { path: ^/api/category/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/category/\d+/edit, roles: PUBLIC_ACCESS }
        - { path: ^/api/category/\d+/delete, roles: PUBLIC_ACCESS }


        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS  }
        - { path: ^/api/user/add, roles: PUBLIC_ACCESS }
        - { path: ^/api/doc, roles: PUBLIC_ACCESS  }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon